@page "/"
@using Microsoft.AspNetCore.SignalR.Client
@using BlazorSignalR.Models

<PageTitle>Index</PageTitle>
Welcome to your new app.

<div>
    SignalR Status : @IsConnected
    Status Updated On : @updatedOn
</div>

<h3>
    Incoming Messages
</h3>

@foreach(var str in stringList)
{
    <span>@str</span>
}

<h3>
    Incoming Employee
</h3>

<table class="table">
    <thead>
        <tr>
            <th>Id</th>
            <th>Name.</th>
            <th>Address.</th>
        </tr>
    </thead>
    <tbody>
        @foreach(var emp in empList)
        {
            <tr>
                <td>@emp.Id</td>
                <td>@emp.Name</td>
                <td>@emp.Address</td>
            </tr>
        }
    </tbody>
</table>

@code{
    private HubConnection? hubConnection;
    public List<Employee> empList = new();
    public List<string> stringList = new List<string>();
    public string updatedOn;

    protected override async Task OnInitializedAsync()
    {
        empList = new List<Employee>();

        hubConnection = new HubConnectionBuilder().WithUrl("http://localhost:5250/signalHub").Build();

        hubConnection.On<Employee>("ReceiveEmployee", (employee) =>
        {
            empList.Add(employee);
            updatedOn = DateTime.Now.ToLongTimeString();
             InvokeAsync(StateHasChanged);
        });

        hubConnection.On<string>("ReceiveMessage", (Message) =>
        {
            stringList.Add(Message);
            updatedOn = DateTime.Now.ToLongTimeString();
            InvokeAsync(StateHasChanged);
        });
        await hubConnection.StartAsync();
    }
    public bool IsConnected => hubConnection?.State == HubConnectionState.Connected;

}